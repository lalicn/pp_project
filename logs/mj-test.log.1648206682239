INFO  12:09:16,189 - Compiling source file: C:\Users\Korisnik\Desktop\Programski prevodioci\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  12:09:16,211 - #1 program
INFO  12:09:16,212 - #21 p
INFO  12:09:16,212 - #6 const
INFO  12:09:16,212 - #21 int
INFO  12:09:16,212 - #21 size
INFO  12:09:16,212 - #38 =
INFO  12:09:16,212 - #22 10
INFO  12:09:16,212 - #41 ;
INFO  12:09:16,212 - #3 class
INFO  12:09:16,212 - #21 Table
INFO  12:09:16,213 - #49 {
INFO  12:09:16,213 - #21 int
INFO  12:09:16,213 - #21 pos
INFO  12:09:16,213 - #47 [
INFO  12:09:16,213 - #48 ]
INFO  12:09:16,213 - #43 ,
INFO  12:09:16,213 - #21 neg
INFO  12:09:16,213 - #47 [
INFO  12:09:16,213 - #48 ]
INFO  12:09:16,213 - #41 ;
INFO  12:09:16,214 - #49 {
INFO  12:09:16,214 - #14 void
INFO  12:09:16,214 - #21 putp
INFO  12:09:16,214 - #45 (
INFO  12:09:16,214 - #21 int
INFO  12:09:16,214 - #21 a
INFO  12:09:16,214 - #43 ,
INFO  12:09:16,214 - #21 int
INFO  12:09:16,214 - #21 idx
INFO  12:09:16,214 - #46 )
INFO  12:09:16,214 - #49 {
INFO  12:09:16,215 - #17 this
INFO  12:09:16,215 - #44 .
INFO  12:09:16,215 - #21 pos
INFO  12:09:16,215 - #47 [
INFO  12:09:16,215 - #21 idx
INFO  12:09:16,215 - #48 ]
INFO  12:09:16,215 - #38 =
INFO  12:09:16,215 - #21 a
INFO  12:09:16,215 - #41 ;
INFO  12:09:16,215 - #50 }
INFO  12:09:16,215 - #14 void
INFO  12:09:16,215 - #21 putn
INFO  12:09:16,216 - #45 (
INFO  12:09:16,216 - #21 int
INFO  12:09:16,216 - #21 a
INFO  12:09:16,216 - #43 ,
INFO  12:09:16,216 - #21 int
INFO  12:09:16,216 - #21 idx
INFO  12:09:16,216 - #46 )
INFO  12:09:16,216 - #49 {
INFO  12:09:16,216 - #17 this
INFO  12:09:16,216 - #44 .
INFO  12:09:16,217 - #21 neg
INFO  12:09:16,217 - #47 [
INFO  12:09:16,217 - #21 idx
INFO  12:09:16,217 - #48 ]
INFO  12:09:16,217 - #38 =
INFO  12:09:16,217 - #21 a
INFO  12:09:16,217 - #41 ;
INFO  12:09:16,217 - #50 }
INFO  12:09:16,217 - #21 int
INFO  12:09:16,217 - #21 getp
INFO  12:09:16,217 - #45 (
INFO  12:09:16,218 - #21 int
INFO  12:09:16,218 - #21 idx
INFO  12:09:16,218 - #46 )
INFO  12:09:16,218 - #49 {
INFO  12:09:16,218 - #13 return
INFO  12:09:16,218 - #21 pos
INFO  12:09:16,218 - #47 [
INFO  12:09:16,218 - #21 idx
INFO  12:09:16,218 - #48 ]
INFO  12:09:16,218 - #41 ;
INFO  12:09:16,218 - #50 }
INFO  12:09:16,218 - #21 int
INFO  12:09:16,218 - #21 getn
INFO  12:09:16,219 - #45 (
INFO  12:09:16,219 - #21 int
INFO  12:09:16,219 - #21 idx
INFO  12:09:16,219 - #46 )
INFO  12:09:16,219 - #49 {
INFO  12:09:16,219 - #13 return
INFO  12:09:16,219 - #21 neg
INFO  12:09:16,219 - #47 [
INFO  12:09:16,219 - #21 idx
INFO  12:09:16,219 - #48 ]
INFO  12:09:16,219 - #41 ;
INFO  12:09:16,219 - #50 }
INFO  12:09:16,220 - #50 }
INFO  12:09:16,220 - #50 }
INFO  12:09:16,220 - #20 record
INFO  12:09:16,220 - #21 Board
INFO  12:09:16,220 - #49 {
INFO  12:09:16,220 - #21 int
INFO  12:09:16,220 - #21 rows
INFO  12:09:16,220 - #43 ,
INFO  12:09:16,220 - #21 columns
INFO  12:09:16,221 - #41 ;
INFO  12:09:16,221 - #50 }
INFO  12:09:16,221 - #21 Table
INFO  12:09:16,221 - #21 val
INFO  12:09:16,221 - #41 ;
INFO  12:09:16,221 - #21 Board
INFO  12:09:16,221 - #21 board
INFO  12:09:16,221 - #41 ;
INFO  12:09:16,221 - #49 {
INFO  12:09:16,221 - #14 void
INFO  12:09:16,222 - #21 f
INFO  12:09:16,222 - #45 (
INFO  12:09:16,222 - #21 char
INFO  12:09:16,222 - #21 ch
INFO  12:09:16,222 - #43 ,
INFO  12:09:16,222 - #21 int
INFO  12:09:16,222 - #21 a
INFO  12:09:16,222 - #43 ,
INFO  12:09:16,222 - #21 int
INFO  12:09:16,222 - #21 arg
INFO  12:09:16,222 - #46 )
INFO  12:09:16,223 - #21 int
INFO  12:09:16,223 - #21 x
INFO  12:09:16,223 - #41 ;
INFO  12:09:16,223 - #49 {
INFO  12:09:16,223 - #21 x
INFO  12:09:16,223 - #38 =
INFO  12:09:16,223 - #21 arg
INFO  12:09:16,223 - #41 ;
INFO  12:09:16,223 - #50 }
INFO  12:09:16,224 - #14 void
INFO  12:09:16,224 - #21 main
INFO  12:09:16,224 - #45 (
INFO  12:09:16,224 - #46 )
INFO  12:09:16,224 - #21 int
INFO  12:09:16,224 - #21 x
INFO  12:09:16,224 - #43 ,
INFO  12:09:16,224 - #21 i
INFO  12:09:16,224 - #41 ;
INFO  12:09:16,224 - #21 char
INFO  12:09:16,224 - #21 c
INFO  12:09:16,225 - #41 ;
INFO  12:09:16,225 - #49 {
INFO  12:09:16,225 - #21 val
INFO  12:09:16,225 - #38 =
INFO  12:09:16,225 - #10 new
INFO  12:09:16,225 - #21 Table
INFO  12:09:16,225 - #41 ;
INFO  12:09:16,225 - #21 val
INFO  12:09:16,225 - #44 .
INFO  12:09:16,225 - #21 pos
INFO  12:09:16,225 - #38 =
INFO  12:09:16,225 - #10 new
INFO  12:09:16,225 - #21 int
INFO  12:09:16,225 - #47 [
INFO  12:09:16,226 - #21 size
INFO  12:09:16,226 - #48 ]
INFO  12:09:16,226 - #41 ;
INFO  12:09:16,226 - #21 val
INFO  12:09:16,226 - #44 .
INFO  12:09:16,226 - #21 neg
INFO  12:09:16,226 - #38 =
INFO  12:09:16,226 - #10 new
INFO  12:09:16,226 - #21 int
INFO  12:09:16,226 - #47 [
INFO  12:09:16,226 - #21 size
INFO  12:09:16,226 - #48 ]
INFO  12:09:16,227 - #41 ;
INFO  12:09:16,227 - #12 read
INFO  12:09:16,227 - #45 (
INFO  12:09:16,227 - #21 x
INFO  12:09:16,227 - #46 )
INFO  12:09:16,227 - #41 ;
INFO  12:09:16,227 - #7 if
INFO  12:09:16,227 - #45 (
INFO  12:09:16,228 - #21 x
INFO  12:09:16,228 - #32 >
INFO  12:09:16,228 - #22 5
INFO  12:09:16,228 - #46 )
INFO  12:09:16,228 - #49 {
INFO  12:09:16,228 - #19 goto
INFO  12:09:16,228 - #21 skip
INFO  12:09:16,228 - #41 ;
INFO  12:09:16,228 - #50 }
INFO  12:09:16,228 - #21 i
INFO  12:09:16,228 - #38 =
INFO  12:09:16,228 - #22 0
INFO  12:09:16,228 - #41 ;
INFO  12:09:16,228 - #8 do
INFO  12:09:16,228 - #49 {
INFO  12:09:16,228 - #21 val
INFO  12:09:16,228 - #44 .
INFO  12:09:16,229 - #21 putp
INFO  12:09:16,229 - #45 (
INFO  12:09:16,229 - #22 0
INFO  12:09:16,229 - #43 ,
INFO  12:09:16,229 - #21 i
INFO  12:09:16,229 - #46 )
INFO  12:09:16,229 - #41 ;
INFO  12:09:16,229 - #21 val
INFO  12:09:16,233 - #44 .
INFO  12:09:16,233 - #21 putn
INFO  12:09:16,233 - #45 (
INFO  12:09:16,233 - #22 0
INFO  12:09:16,233 - #43 ,
INFO  12:09:16,233 - #21 i
INFO  12:09:16,234 - #46 )
INFO  12:09:16,234 - #41 ;
INFO  12:09:16,234 - #21 i
INFO  12:09:16,234 - #39 ++
INFO  12:09:16,234 - #41 ;
INFO  12:09:16,234 - #50 }
INFO  12:09:16,234 - #9 while
INFO  12:09:16,234 - #45 (
INFO  12:09:16,234 - #21 i
INFO  12:09:16,234 - #34 <
INFO  12:09:16,234 - #21 size
INFO  12:09:16,234 - #46 )
INFO  12:09:16,234 - #41 ;
INFO  12:09:16,234 - #21 skip
INFO  12:09:16,234 - #42 :
INFO  12:09:16,234 - #21 f
INFO  12:09:16,234 - #45 (
INFO  12:09:16,235 - #21 c
INFO  12:09:16,235 - #43 ,
INFO  12:09:16,235 - #21 x
INFO  12:09:16,235 - #43 ,
INFO  12:09:16,235 - #21 i
INFO  12:09:16,235 - #46 )
INFO  12:09:16,235 - #41 ;
INFO  12:09:16,235 - #21 board
INFO  12:09:16,235 - #38 =
INFO  12:09:16,235 - #10 new
INFO  12:09:16,235 - #21 Board
INFO  12:09:16,235 - #41 ;
INFO  12:09:16,235 - #12 read
INFO  12:09:16,235 - #45 (
INFO  12:09:16,235 - #21 board
INFO  12:09:16,235 - #44 .
INFO  12:09:16,235 - #21 rows
INFO  12:09:16,235 - #46 )
INFO  12:09:16,235 - #41 ;
INFO  12:09:16,235 - #21 x
INFO  12:09:16,235 - #38 =
INFO  12:09:16,236 - #21 board
INFO  12:09:16,236 - #44 .
INFO  12:09:16,236 - #21 rows
INFO  12:09:16,236 - #41 ;
INFO  12:09:16,236 - #8 do
INFO  12:09:16,236 - #49 {
INFO  12:09:16,236 - #7 if
INFO  12:09:16,236 - #45 (
INFO  12:09:16,236 - #21 x
INFO  12:09:16,236 - #35 <=
INFO  12:09:16,236 - #22 0
INFO  12:09:16,236 - #46 )
INFO  12:09:16,236 - #2 break
INFO  12:09:16,237 - #41 ;
INFO  12:09:16,237 - #7 if
INFO  12:09:16,237 - #45 (
INFO  12:09:16,237 - #22 0
INFO  12:09:16,237 - #35 <=
INFO  12:09:16,237 - #21 x
INFO  12:09:16,237 - #36 &&
INFO  12:09:16,237 - #21 x
INFO  12:09:16,237 - #34 <
INFO  12:09:16,237 - #21 size
INFO  12:09:16,237 - #46 )
INFO  12:09:16,237 - #49 {
INFO  12:09:16,237 - #21 val
INFO  12:09:16,237 - #44 .
INFO  12:09:16,238 - #21 putp
INFO  12:09:16,238 - #45 (
INFO  12:09:16,238 - #21 val
INFO  12:09:16,238 - #44 .
INFO  12:09:16,238 - #21 getp
INFO  12:09:16,238 - #45 (
INFO  12:09:16,238 - #21 x
INFO  12:09:16,238 - #46 )
INFO  12:09:16,238 - #25 +
INFO  12:09:16,238 - #22 1
INFO  12:09:16,238 - #46 )
INFO  12:09:16,238 - #41 ;
INFO  12:09:16,238 - #50 }
INFO  12:09:16,238 - #5 else
INFO  12:09:16,238 - #7 if
INFO  12:09:16,238 - #45 (
INFO  12:09:16,238 - #26 -
INFO  12:09:16,238 - #21 size
INFO  12:09:16,238 - #34 <
INFO  12:09:16,238 - #21 x
INFO  12:09:16,238 - #36 &&
INFO  12:09:16,238 - #21 x
INFO  12:09:16,238 - #34 <
INFO  12:09:16,239 - #22 0
INFO  12:09:16,239 - #46 )
INFO  12:09:16,239 - #49 {
INFO  12:09:16,239 - #21 val
INFO  12:09:16,239 - #44 .
INFO  12:09:16,239 - #21 putn
INFO  12:09:16,239 - #45 (
INFO  12:09:16,239 - #21 val
INFO  12:09:16,239 - #44 .
INFO  12:09:16,239 - #21 getn
INFO  12:09:16,239 - #45 (
INFO  12:09:16,239 - #26 -
INFO  12:09:16,239 - #21 x
INFO  12:09:16,239 - #46 )
INFO  12:09:16,239 - #25 +
INFO  12:09:16,239 - #22 1
INFO  12:09:16,239 - #46 )
INFO  12:09:16,239 - #41 ;
INFO  12:09:16,239 - #50 }
INFO  12:09:16,239 - #12 read
INFO  12:09:16,239 - #45 (
INFO  12:09:16,239 - #21 x
INFO  12:09:16,239 - #46 )
INFO  12:09:16,240 - #41 ;
INFO  12:09:16,240 - #50 }
INFO  12:09:16,240 - #9 while
INFO  12:09:16,240 - #45 (
INFO  12:09:16,240 - #21 true
INFO  12:09:16,240 - #46 )
INFO  12:09:16,240 - #41 ;
INFO  12:09:16,240 - #50 }
INFO  12:09:16,240 - #50 }
