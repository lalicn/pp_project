INFO  15:15:09,704 - Compiling source file: C:\Users\Korisnik\Desktop\Programski prevodioci\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  15:15:09,756 - #2 program
INFO  15:15:09,756 - #49 Program
INFO  15:15:09,757 - #4 class
INFO  15:15:09,757 - #49 A
INFO  15:15:09,758 - #44 {
INFO  15:15:09,758 - #49 int
INFO  15:15:09,759 - #49 x
INFO  15:15:09,760 - #42 [
INFO  15:15:09,760 - #43 ]
INFO  15:15:09,760 - #38 ,
INFO  15:15:09,760 - #49 y
INFO  15:15:09,761 - #42 [
INFO  15:15:09,761 - #43 ]
INFO  15:15:09,761 - #36 ;
INFO  15:15:09,761 - #45 }
INFO  15:15:09,763 - #6 const
INFO  15:15:09,764 - #49 int
INFO  15:15:09,764 - #49 pi
INFO  15:15:09,764 - #33 =
INFO  15:15:09,764 - #48 3
INFO  15:15:09,772 - #38 ,
INFO  15:15:09,772 - #49 e
INFO  15:15:09,772 - #33 =
INFO  15:15:09,772 - #48 2
INFO  15:15:09,772 - #36 ;
INFO  15:15:09,772 - #4 class
INFO  15:15:09,773 - #49 B
INFO  15:15:09,773 - #14 extends
INFO  15:15:09,773 - #49 A
INFO  15:15:09,773 - #44 {
INFO  15:15:09,773 - #49 int
INFO  15:15:09,773 - #49 i
INFO  15:15:09,773 - #36 ;
INFO  15:15:09,774 - #44 {
INFO  15:15:09,774 - #49 int
INFO  15:15:09,774 - #49 getValue
INFO  15:15:09,774 - #40 (
INFO  15:15:09,775 - #49 int
INFO  15:15:09,775 - #49 a
INFO  15:15:09,775 - #41 )
INFO  15:15:09,775 - #49 int
INFO  15:15:09,775 - #49 b
INFO  15:15:09,775 - #36 ;
INFO  15:15:09,775 - #49 bool
INFO  15:15:09,775 - #49 c
INFO  15:15:09,775 - #36 ;
INFO  15:15:09,775 - #44 {
INFO  15:15:09,776 - #12 return
INFO  15:15:09,776 - #16 this
INFO  15:15:09,776 - #39 .
INFO  15:15:09,777 - #49 i
INFO  15:15:09,778 - #20 +
INFO  15:15:09,778 - #16 this
INFO  15:15:09,778 - #39 .
INFO  15:15:09,778 - #49 x
INFO  15:15:09,778 - #42 [
INFO  15:15:09,778 - #48 0
INFO  15:15:09,778 - #43 ]
INFO  15:15:09,780 - #20 +
INFO  15:15:09,780 - #49 a
INFO  15:15:09,780 - #36 ;
INFO  15:15:09,780 - #45 }
INFO  15:15:09,780 - #13 void
INFO  15:15:09,780 - #49 m
INFO  15:15:09,781 - #40 (
INFO  15:15:09,781 - #41 )
INFO  15:15:09,782 - #44 {
INFO  15:15:09,782 - #45 }
INFO  15:15:09,782 - #45 }
INFO  15:15:09,782 - #45 }
INFO  15:15:09,785 - #4 class
INFO  15:15:09,785 - #49 C
INFO  15:15:09,786 - #14 extends
INFO  15:15:09,786 - #49 B
INFO  15:15:09,786 - #44 {
INFO  15:15:09,786 - #49 A
INFO  15:15:09,786 - #49 theA
INFO  15:15:09,786 - #36 ;
INFO  15:15:09,786 - #49 int
INFO  15:15:09,786 - #49 a
INFO  15:15:09,786 - #36 ;
INFO  15:15:09,786 - #45 }
INFO  15:15:09,786 - #44 {
INFO  15:15:09,786 - #13 void
INFO  15:15:09,787 - #49 main
INFO  15:15:09,787 - #40 (
INFO  15:15:09,787 - #41 )
INFO  15:15:09,787 - #49 A
INFO  15:15:09,787 - #49 a
INFO  15:15:09,787 - #36 ;
INFO  15:15:09,787 - #49 C
INFO  15:15:09,787 - #49 c
INFO  15:15:09,787 - #36 ;
INFO  15:15:09,787 - #49 int
INFO  15:15:09,787 - #49 i
INFO  15:15:09,787 - #36 ;
INFO  15:15:09,787 - #49 int
INFO  15:15:09,787 - #49 x
INFO  15:15:09,787 - #42 [
INFO  15:15:09,787 - #43 ]
INFO  15:15:09,787 - #36 ;
INFO  15:15:09,788 - #49 char
INFO  15:15:09,788 - #49 ch
INFO  15:15:09,788 - #36 ;
INFO  15:15:09,788 - #44 {
INFO  15:15:09,788 - #49 a
INFO  15:15:09,788 - #33 =
INFO  15:15:09,788 - #9 new
INFO  15:15:09,789 - #49 A
INFO  15:15:09,789 - #36 ;
INFO  15:15:09,789 - #49 a
INFO  15:15:09,789 - #39 .
INFO  15:15:09,789 - #49 x
INFO  15:15:09,789 - #33 =
INFO  15:15:09,789 - #9 new
INFO  15:15:09,789 - #49 int
INFO  15:15:09,789 - #42 [
INFO  15:15:09,789 - #48 5
INFO  15:15:09,790 - #43 ]
INFO  15:15:09,790 - #36 ;
INFO  15:15:09,790 - #49 a
INFO  15:15:09,790 - #39 .
INFO  15:15:09,790 - #49 y
INFO  15:15:09,790 - #33 =
INFO  15:15:09,790 - #9 new
INFO  15:15:09,790 - #49 int
INFO  15:15:09,790 - #42 [
INFO  15:15:09,790 - #48 5
INFO  15:15:09,790 - #43 ]
INFO  15:15:09,790 - #36 ;
INFO  15:15:09,791 - #49 c
INFO  15:15:09,791 - #33 =
INFO  15:15:09,791 - #9 new
INFO  15:15:09,791 - #49 C
INFO  15:15:09,791 - #36 ;
INFO  15:15:09,791 - #49 c
INFO  15:15:09,791 - #39 .
INFO  15:15:09,791 - #49 theA
INFO  15:15:09,791 - #33 =
INFO  15:15:09,791 - #49 a
INFO  15:15:09,791 - #36 ;
INFO  15:15:09,791 - #49 c
INFO  15:15:09,791 - #39 .
INFO  15:15:09,791 - #49 x
INFO  15:15:09,791 - #33 =
INFO  15:15:09,791 - #9 new
INFO  15:15:09,791 - #49 int
INFO  15:15:09,792 - #42 [
INFO  15:15:09,792 - #48 5
INFO  15:15:09,792 - #43 ]
INFO  15:15:09,792 - #36 ;
INFO  15:15:09,792 - #49 x
INFO  15:15:09,792 - #33 =
INFO  15:15:09,792 - #9 new
INFO  15:15:09,792 - #49 int
INFO  15:15:09,792 - #42 [
INFO  15:15:09,792 - #48 3
INFO  15:15:09,792 - #43 ]
INFO  15:15:09,792 - #36 ;
INFO  15:15:09,792 - #11 read
INFO  15:15:09,792 - #40 (
INFO  15:15:09,792 - #49 c
INFO  15:15:09,793 - #39 .
INFO  15:15:09,793 - #49 i
INFO  15:15:09,793 - #41 )
INFO  15:15:09,793 - #36 ;
INFO  15:15:09,793 - #49 i
INFO  15:15:09,793 - #33 =
INFO  15:15:09,793 - #48 0
INFO  15:15:09,793 - #36 ;
INFO  15:15:09,793 - #7 do
INFO  15:15:09,793 - #44 {
INFO  15:15:09,793 - #11 read
INFO  15:15:09,793 - #40 (
INFO  15:15:09,793 - #49 c
INFO  15:15:09,793 - #39 .
INFO  15:15:09,794 - #49 x
INFO  15:15:09,794 - #42 [
INFO  15:15:09,794 - #49 i
INFO  15:15:09,794 - #43 ]
INFO  15:15:09,794 - #41 )
INFO  15:15:09,794 - #36 ;
INFO  15:15:09,794 - #11 read
INFO  15:15:09,794 - #40 (
INFO  15:15:09,794 - #49 c
INFO  15:15:09,794 - #39 .
INFO  15:15:09,794 - #49 theA
INFO  15:15:09,794 - #39 .
INFO  15:15:09,794 - #49 x
INFO  15:15:09,794 - #42 [
INFO  15:15:09,794 - #49 i
INFO  15:15:09,794 - #43 ]
INFO  15:15:09,794 - #41 )
INFO  15:15:09,794 - #36 ;
INFO  15:15:09,794 - #49 i
INFO  15:15:09,795 - #34 ++
INFO  15:15:09,795 - #36 ;
INFO  15:15:09,795 - #48 9
ERROR 15:15:09,795 - 
Sintaksna greska na liniji 24
ERROR 15:15:09,795 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 24
