INFO  15:17:09,684 - Compiling source file: C:\Users\Korisnik\Desktop\Programski prevodioci\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  15:17:09,755 - #2 program
INFO  15:17:09,755 - #49 Program
INFO  15:17:09,755 - #4 class
INFO  15:17:09,756 - #49 A
INFO  15:17:09,756 - #44 {
INFO  15:17:09,757 - #49 int
INFO  15:17:09,758 - #49 x
INFO  15:17:09,759 - #42 [
INFO  15:17:09,759 - #43 ]
INFO  15:17:09,759 - #38 ,
INFO  15:17:09,759 - #49 y
INFO  15:17:09,759 - #42 [
INFO  15:17:09,759 - #43 ]
INFO  15:17:09,759 - #36 ;
INFO  15:17:09,760 - #45 }
INFO  15:17:09,762 - #6 const
INFO  15:17:09,763 - #49 int
INFO  15:17:09,763 - #49 pi
INFO  15:17:09,763 - #33 =
INFO  15:17:09,763 - #48 3
INFO  15:17:09,772 - #38 ,
INFO  15:17:09,772 - #49 e
INFO  15:17:09,772 - #33 =
INFO  15:17:09,772 - #48 2
INFO  15:17:09,772 - #36 ;
INFO  15:17:09,773 - #4 class
INFO  15:17:09,773 - #49 B
INFO  15:17:09,774 - #14 extends
INFO  15:17:09,774 - #49 A
INFO  15:17:09,774 - #44 {
INFO  15:17:09,774 - #49 int
INFO  15:17:09,774 - #49 i
INFO  15:17:09,774 - #36 ;
INFO  15:17:09,774 - #44 {
INFO  15:17:09,774 - #49 int
INFO  15:17:09,775 - #49 getValue
INFO  15:17:09,776 - #40 (
INFO  15:17:09,776 - #49 int
INFO  15:17:09,776 - #49 a
INFO  15:17:09,776 - #41 )
INFO  15:17:09,776 - #49 int
INFO  15:17:09,776 - #49 b
INFO  15:17:09,776 - #36 ;
INFO  15:17:09,777 - #49 bool
INFO  15:17:09,777 - #49 c
INFO  15:17:09,777 - #36 ;
INFO  15:17:09,777 - #44 {
INFO  15:17:09,777 - #12 return
INFO  15:17:09,778 - #16 this
INFO  15:17:09,778 - #39 .
INFO  15:17:09,779 - #49 i
INFO  15:17:09,779 - #20 +
INFO  15:17:09,779 - #16 this
INFO  15:17:09,781 - #39 .
INFO  15:17:09,781 - #49 x
INFO  15:17:09,781 - #42 [
INFO  15:17:09,781 - #48 0
INFO  15:17:09,781 - #43 ]
INFO  15:17:09,781 - #20 +
INFO  15:17:09,782 - #49 a
INFO  15:17:09,782 - #36 ;
INFO  15:17:09,782 - #45 }
INFO  15:17:09,782 - #13 void
INFO  15:17:09,783 - #49 m
INFO  15:17:09,784 - #40 (
INFO  15:17:09,784 - #41 )
INFO  15:17:09,785 - #44 {
INFO  15:17:09,785 - #45 }
INFO  15:17:09,785 - #45 }
INFO  15:17:09,785 - #45 }
INFO  15:17:09,789 - #4 class
INFO  15:17:09,789 - #49 C
INFO  15:17:09,789 - #14 extends
INFO  15:17:09,789 - #49 B
INFO  15:17:09,789 - #44 {
INFO  15:17:09,789 - #49 A
INFO  15:17:09,789 - #49 theA
INFO  15:17:09,789 - #36 ;
INFO  15:17:09,790 - #49 int
INFO  15:17:09,790 - #49 a
INFO  15:17:09,790 - #36 ;
INFO  15:17:09,790 - #45 }
INFO  15:17:09,790 - #44 {
INFO  15:17:09,790 - #13 void
INFO  15:17:09,790 - #49 main
INFO  15:17:09,790 - #40 (
INFO  15:17:09,790 - #41 )
INFO  15:17:09,790 - #49 A
INFO  15:17:09,791 - #49 a
INFO  15:17:09,791 - #36 ;
INFO  15:17:09,791 - #49 C
INFO  15:17:09,791 - #49 c
INFO  15:17:09,791 - #36 ;
INFO  15:17:09,791 - #49 int
INFO  15:17:09,791 - #49 i
INFO  15:17:09,791 - #36 ;
INFO  15:17:09,791 - #49 int
INFO  15:17:09,791 - #49 x
INFO  15:17:09,791 - #42 [
INFO  15:17:09,792 - #43 ]
INFO  15:17:09,792 - #36 ;
INFO  15:17:09,792 - #49 char
INFO  15:17:09,792 - #49 ch
INFO  15:17:09,792 - #36 ;
INFO  15:17:09,792 - #44 {
INFO  15:17:09,792 - #49 a
INFO  15:17:09,792 - #33 =
INFO  15:17:09,792 - #9 new
INFO  15:17:09,793 - #49 A
INFO  15:17:09,793 - #36 ;
INFO  15:17:09,794 - #49 a
INFO  15:17:09,794 - #39 .
INFO  15:17:09,794 - #49 x
INFO  15:17:09,794 - #33 =
INFO  15:17:09,794 - #9 new
INFO  15:17:09,794 - #49 int
INFO  15:17:09,795 - #42 [
INFO  15:17:09,795 - #48 5
INFO  15:17:09,795 - #43 ]
INFO  15:17:09,795 - #36 ;
INFO  15:17:09,795 - #49 a
INFO  15:17:09,795 - #39 .
INFO  15:17:09,795 - #49 y
INFO  15:17:09,795 - #33 =
INFO  15:17:09,795 - #9 new
INFO  15:17:09,796 - #49 int
INFO  15:17:09,796 - #42 [
INFO  15:17:09,796 - #48 5
INFO  15:17:09,796 - #43 ]
INFO  15:17:09,796 - #36 ;
INFO  15:17:09,796 - #49 c
INFO  15:17:09,796 - #33 =
INFO  15:17:09,796 - #9 new
INFO  15:17:09,796 - #49 C
INFO  15:17:09,796 - #36 ;
INFO  15:17:09,797 - #49 c
INFO  15:17:09,797 - #39 .
INFO  15:17:09,797 - #49 theA
INFO  15:17:09,797 - #33 =
INFO  15:17:09,797 - #49 a
INFO  15:17:09,797 - #36 ;
INFO  15:17:09,797 - #49 c
INFO  15:17:09,797 - #39 .
INFO  15:17:09,797 - #49 x
INFO  15:17:09,797 - #33 =
INFO  15:17:09,798 - #9 new
INFO  15:17:09,798 - #49 int
INFO  15:17:09,798 - #42 [
INFO  15:17:09,798 - #48 5
INFO  15:17:09,798 - #43 ]
INFO  15:17:09,798 - #36 ;
INFO  15:17:09,798 - #49 x
INFO  15:17:09,798 - #33 =
INFO  15:17:09,798 - #9 new
INFO  15:17:09,798 - #49 int
INFO  15:17:09,798 - #42 [
INFO  15:17:09,799 - #48 3
INFO  15:17:09,799 - #43 ]
INFO  15:17:09,799 - #36 ;
INFO  15:17:09,799 - #11 read
INFO  15:17:09,799 - #40 (
INFO  15:17:09,799 - #49 c
INFO  15:17:09,799 - #39 .
INFO  15:17:09,799 - #49 i
INFO  15:17:09,799 - #41 )
INFO  15:17:09,799 - #36 ;
INFO  15:17:09,799 - #49 i
INFO  15:17:09,800 - #33 =
INFO  15:17:09,800 - #48 0
INFO  15:17:09,800 - #36 ;
INFO  15:17:09,800 - #7 do
INFO  15:17:09,800 - #44 {
INFO  15:17:09,800 - #11 read
INFO  15:17:09,800 - #40 (
INFO  15:17:09,800 - #49 c
INFO  15:17:09,800 - #39 .
INFO  15:17:09,800 - #49 x
INFO  15:17:09,800 - #42 [
INFO  15:17:09,800 - #49 i
INFO  15:17:09,801 - #43 ]
INFO  15:17:09,801 - #41 )
INFO  15:17:09,801 - #36 ;
INFO  15:17:09,801 - #11 read
INFO  15:17:09,801 - #40 (
INFO  15:17:09,801 - #49 c
INFO  15:17:09,801 - #39 .
INFO  15:17:09,801 - #49 theA
INFO  15:17:09,801 - #39 .
INFO  15:17:09,801 - #49 x
INFO  15:17:09,801 - #42 [
INFO  15:17:09,802 - #49 i
INFO  15:17:09,802 - #43 ]
INFO  15:17:09,802 - #41 )
INFO  15:17:09,802 - #36 ;
INFO  15:17:09,802 - #49 i
INFO  15:17:09,802 - #34 ++
INFO  15:17:09,802 - #36 ;
INFO  15:17:09,802 - #45 }
INFO  15:17:09,802 - #8 while
INFO  15:17:09,804 - #40 (
INFO  15:17:09,804 - #49 i
INFO  15:17:09,804 - #29 <
INFO  15:17:09,804 - #48 5
INFO  15:17:09,806 - #41 )
INFO  15:17:09,806 - #36 ;
INFO  15:17:09,806 - #10 print
INFO  15:17:09,807 - #40 (
INFO  15:17:09,807 - #49 c
INFO  15:17:09,807 - #39 .
INFO  15:17:09,807 - #49 getValue
INFO  15:17:09,807 - #40 (
INFO  15:17:09,807 - #49 c
ERROR 15:17:09,807 - 
Sintaksna greska na liniji 25
ERROR 15:17:09,807 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 25
