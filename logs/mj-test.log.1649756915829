INFO  13:31:34,970 - Compiling source file: C:\Users\Korisnik\Desktop\Programski prevodioci\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  13:31:35,039 - #2 program
INFO  13:31:35,039 - #49 Program
INFO  13:31:35,039 - #4 class
INFO  13:31:35,040 - #49 A
INFO  13:31:35,040 - #44 {
INFO  13:31:35,042 - #49 int
INFO  13:31:35,042 - #49 x
INFO  13:31:35,044 - #42 [
INFO  13:31:35,044 - #43 ]
INFO  13:31:35,044 - #38 ,
INFO  13:31:35,044 - #49 y
INFO  13:31:35,044 - #42 [
INFO  13:31:35,044 - #43 ]
INFO  13:31:35,044 - #36 ;
INFO  13:31:35,045 - #45 }
INFO  13:31:35,047 - #6 const
INFO  13:31:35,048 - #49 int
INFO  13:31:35,049 - #49 pi
INFO  13:31:35,049 - #33 =
INFO  13:31:35,049 - #48 3
INFO  13:31:35,050 - #38 ,
INFO  13:31:35,050 - #49 e
INFO  13:31:35,050 - #33 =
INFO  13:31:35,050 - #48 2
INFO  13:31:35,050 - #36 ;
INFO  13:31:35,050 - #4 class
INFO  13:31:35,051 - #49 B
INFO  13:31:35,051 - #14 extends
INFO  13:31:35,051 - #49 A
INFO  13:31:35,051 - #44 {
INFO  13:31:35,051 - #49 int
INFO  13:31:35,051 - #49 i
INFO  13:31:35,051 - #36 ;
INFO  13:31:35,051 - #44 {
INFO  13:31:35,052 - #49 int
INFO  13:31:35,053 - #49 getValue
INFO  13:31:35,053 - #40 (
INFO  13:31:35,053 - #49 int
INFO  13:31:35,053 - #49 a
INFO  13:31:35,053 - #41 )
INFO  13:31:35,054 - #49 int
INFO  13:31:35,054 - #49 b
INFO  13:31:35,054 - #36 ;
INFO  13:31:35,054 - #49 bool
INFO  13:31:35,054 - #49 c
INFO  13:31:35,054 - #36 ;
INFO  13:31:35,054 - #44 {
INFO  13:31:35,054 - #12 return
INFO  13:31:35,055 - #16 this
INFO  13:31:35,055 - #39 .
INFO  13:31:35,056 - #49 i
INFO  13:31:35,057 - #20 +
INFO  13:31:35,057 - #16 this
INFO  13:31:35,059 - #39 .
INFO  13:31:35,059 - #49 x
INFO  13:31:35,059 - #42 [
INFO  13:31:35,059 - #48 0
INFO  13:31:35,059 - #43 ]
INFO  13:31:35,059 - #20 +
INFO  13:31:35,059 - #49 a
INFO  13:31:35,059 - #36 ;
INFO  13:31:35,059 - #45 }
INFO  13:31:35,060 - #13 void
INFO  13:31:35,061 - #49 m
INFO  13:31:35,062 - #40 (
INFO  13:31:35,063 - #41 )
INFO  13:31:35,063 - #44 {
INFO  13:31:35,064 - #45 }
INFO  13:31:35,064 - #45 }
INFO  13:31:35,064 - #45 }
INFO  13:31:35,067 - #4 class
INFO  13:31:35,068 - #49 C
INFO  13:31:35,068 - #14 extends
INFO  13:31:35,068 - #49 B
INFO  13:31:35,068 - #44 {
INFO  13:31:35,068 - #49 A
INFO  13:31:35,068 - #49 theA
INFO  13:31:35,068 - #36 ;
INFO  13:31:35,068 - #49 int
INFO  13:31:35,068 - #49 a
INFO  13:31:35,068 - #36 ;
INFO  13:31:35,069 - #45 }
INFO  13:31:35,069 - #44 {
INFO  13:31:35,069 - #13 void
INFO  13:31:35,069 - #49 main
INFO  13:31:35,069 - #40 (
INFO  13:31:35,069 - #41 )
INFO  13:31:35,069 - #49 A
INFO  13:31:35,069 - #49 a
INFO  13:31:35,069 - #36 ;
INFO  13:31:35,069 - #49 C
INFO  13:31:35,069 - #49 c
INFO  13:31:35,069 - #36 ;
INFO  13:31:35,069 - #49 int
INFO  13:31:35,070 - #49 i
INFO  13:31:35,070 - #36 ;
INFO  13:31:35,070 - #49 int
INFO  13:31:35,070 - #49 x
INFO  13:31:35,070 - #42 [
INFO  13:31:35,070 - #43 ]
INFO  13:31:35,070 - #36 ;
INFO  13:31:35,070 - #49 char
INFO  13:31:35,070 - #49 ch
INFO  13:31:35,071 - #36 ;
INFO  13:31:35,071 - #44 {
INFO  13:31:35,071 - #49 a
INFO  13:31:35,071 - #33 =
INFO  13:31:35,071 - #9 new
INFO  13:31:35,071 - #49 A
INFO  13:31:35,071 - #36 ;
INFO  13:31:35,071 - #49 a
INFO  13:31:35,072 - #39 .
INFO  13:31:35,072 - #49 x
INFO  13:31:35,072 - #33 =
INFO  13:31:35,072 - #9 new
INFO  13:31:35,072 - #49 int
INFO  13:31:35,072 - #42 [
INFO  13:31:35,072 - #48 5
INFO  13:31:35,072 - #43 ]
INFO  13:31:35,072 - #36 ;
INFO  13:31:35,072 - #49 a
INFO  13:31:35,072 - #39 .
INFO  13:31:35,073 - #49 y
INFO  13:31:35,073 - #33 =
INFO  13:31:35,073 - #9 new
INFO  13:31:35,073 - #49 int
INFO  13:31:35,073 - #42 [
INFO  13:31:35,073 - #48 5
INFO  13:31:35,073 - #43 ]
INFO  13:31:35,073 - #36 ;
INFO  13:31:35,073 - #49 c
INFO  13:31:35,074 - #33 =
INFO  13:31:35,074 - #9 new
INFO  13:31:35,074 - #49 C
INFO  13:31:35,074 - #36 ;
INFO  13:31:35,074 - #49 c
INFO  13:31:35,074 - #39 .
INFO  13:31:35,074 - #49 theA
INFO  13:31:35,074 - #33 =
INFO  13:31:35,074 - #49 a
INFO  13:31:35,074 - #36 ;
INFO  13:31:35,074 - #49 c
INFO  13:31:35,074 - #39 .
INFO  13:31:35,074 - #49 x
INFO  13:31:35,074 - #33 =
INFO  13:31:35,074 - #9 new
INFO  13:31:35,074 - #49 int
INFO  13:31:35,074 - #42 [
INFO  13:31:35,074 - #48 5
INFO  13:31:35,074 - #43 ]
INFO  13:31:35,074 - #36 ;
INFO  13:31:35,074 - #49 x
INFO  13:31:35,075 - #33 =
INFO  13:31:35,075 - #9 new
INFO  13:31:35,075 - #49 int
INFO  13:31:35,075 - #42 [
INFO  13:31:35,075 - #48 3
INFO  13:31:35,075 - #43 ]
INFO  13:31:35,075 - #36 ;
INFO  13:31:35,075 - #11 read
INFO  13:31:35,075 - #40 (
INFO  13:31:35,075 - #49 c
INFO  13:31:35,075 - #39 .
INFO  13:31:35,075 - #49 i
INFO  13:31:35,075 - #41 )
INFO  13:31:35,075 - #36 ;
INFO  13:31:35,075 - #49 i
INFO  13:31:35,077 - #33 =
INFO  13:31:35,077 - #48 0
INFO  13:31:35,077 - #36 ;
INFO  13:31:35,077 - #7 do
INFO  13:31:35,077 - #44 {
INFO  13:31:35,077 - #11 read
INFO  13:31:35,077 - #40 (
INFO  13:31:35,077 - #49 c
INFO  13:31:35,077 - #39 .
INFO  13:31:35,077 - #49 x
INFO  13:31:35,077 - #42 [
INFO  13:31:35,077 - #49 i
INFO  13:31:35,077 - #43 ]
INFO  13:31:35,077 - #41 )
INFO  13:31:35,077 - #36 ;
INFO  13:31:35,077 - #11 read
INFO  13:31:35,077 - #40 (
INFO  13:31:35,077 - #49 c
INFO  13:31:35,077 - #39 .
INFO  13:31:35,078 - #49 theA
INFO  13:31:35,078 - #39 .
INFO  13:31:35,078 - #49 x
INFO  13:31:35,078 - #42 [
INFO  13:31:35,078 - #49 i
INFO  13:31:35,078 - #43 ]
INFO  13:31:35,078 - #41 )
INFO  13:31:35,078 - #36 ;
INFO  13:31:35,078 - #49 i
INFO  13:31:35,078 - #34 ++
INFO  13:31:35,078 - #36 ;
INFO  13:31:35,079 - #45 }
INFO  13:31:35,079 - #8 while
INFO  13:31:35,080 - #40 (
INFO  13:31:35,080 - #49 i
INFO  13:31:35,080 - #29 <
INFO  13:31:35,080 - #48 5
INFO  13:31:35,082 - #41 )
INFO  13:31:35,083 - #36 ;
INFO  13:31:35,083 - #10 print
INFO  13:31:35,083 - #40 (
INFO  13:31:35,083 - #49 c
INFO  13:31:35,083 - #39 .
INFO  13:31:35,083 - #49 getValue
INFO  13:31:35,083 - #40 (
INFO  13:31:35,083 - #49 c
INFO  13:31:35,083 - #39 .
INFO  13:31:35,083 - #49 theA
INFO  13:31:35,083 - #39 .
INFO  13:31:35,083 - #49 x
INFO  13:31:35,084 - #42 [
INFO  13:31:35,084 - #48 0
INFO  13:31:35,084 - #43 ]
INFO  13:31:35,084 - #41 )
INFO  13:31:35,084 - #41 )
INFO  13:31:35,084 - #36 ;
INFO  13:31:35,084 - #49 c
INFO  13:31:35,084 - #39 .
INFO  13:31:35,084 - #49 m
INFO  13:31:35,084 - #40 (
INFO  13:31:35,084 - #41 )
INFO  13:31:35,086 - #36 ;
INFO  13:31:35,086 - #45 }
INFO  13:31:35,086 - #45 }
INFO  13:31:35,089 - Program(
 Program
  Decl(
    Decl(
      Decl(
        Decl(
          DeclarationsDerived1(
          ) [DeclarationsDerived1]
          ClassDec(
            ClassDecl(
             A
              NonExtendingClass(
              ) [NonExtendingClass]
              VarDeclarations(
                NoVarDecl(
                ) [NoVarDecl]
                VarDeclara(
                  Type(
                   int
                  ) [Type]
                  Vars(
                    NoVarCommaDecl(
                    ) [NoVarCommaDecl]
                    VarArrayDComma(
                     x
                    ) [VarArrayDComma]
                  ) [Vars]
                  VarArrayD(
                   y
                  ) [VarArrayD]
                ) [VarDeclara]
              ) [VarDeclarations]
              ClassWithoutMethods(
              ) [ClassWithoutMethods]
            ) [ClassDecl]
          ) [ClassDec]
        ) [Decl]
        ConstDec(
          ConstDeclar(
            Type(
             int
            ) [Type]
            Consts(
              SingleConstDecl(
                ConstDNum(
                 pi
                  Assignop(
                  ) [Assignop]
                 3
                ) [ConstDNum]
              ) [SingleConstDecl]
              ConstDNum(
               e
                Assignop(
                ) [Assignop]
               2
              ) [ConstDNum]
            ) [Consts]
          ) [ConstDeclar]
        ) [ConstDec]
      ) [Decl]
      ClassDec(
        ClassDecl(
         B
          ExtendClass(
            Type(
             A
            ) [Type]
          ) [ExtendClass]
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            VarDeclara(
              Type(
               int
              ) [Type]
              NoVarCommaDecl(
              ) [NoVarCommaDecl]
              VarDeclaration(
               i
              ) [VarDeclaration]
            ) [VarDeclara]
          ) [VarDeclarations]
          ClassWithMethods(
            MethodDeclarations(
              MethodDeclarations(
                NoMethodDecl(
                ) [NoMethodDecl]
                MethodDecl(
                  TypeReturn(
                    Type(
                     int
                    ) [Type]
                  ) [TypeReturn]
                 getValue
                  FormParams(
                    SingleFormalParamDecl(
                      FormalParamD(
                        Type(
                         int
                        ) [Type]
                       a
                      ) [FormalParamD]
                    ) [SingleFormalParamDecl]
                  ) [FormParams]
                  VarDeclarations(
                    VarDeclarations(
                      NoVarDecl(
                      ) [NoVarDecl]
                      VarDeclara(
                        Type(
                         int
                        ) [Type]
                        NoVarCommaDecl(
                        ) [NoVarCommaDecl]
                        VarDeclaration(
                         b
                        ) [VarDeclaration]
                      ) [VarDeclara]
                    ) [VarDeclarations]
                    VarDeclara(
                      Type(
                       bool
                      ) [Type]
                      NoVarCommaDecl(
                      ) [NoVarCommaDecl]
                      VarDeclaration(
                       c
                      ) [VarDeclaration]
                    ) [VarDeclara]
                  ) [VarDeclarations]
                  StmtList(
                    NoStmt(
                    ) [NoStmt]
                    NoLabelStatement(
                      ReturnExprStatement(
                        AddopExpr(
                          AddopExpr(
                            TermExpr(
                              SingleFactorTerm(
                                Var(
                                  DotDesignator(
                                    ThisDesignator(
                                    ) [ThisDesignator]
                                   i
                                  ) [DotDesignator]
                                ) [Var]
                              ) [SingleFactorTerm]
                            ) [TermExpr]
                            Plus(
                            ) [Plus]
                            SingleFactorTerm(
                              Var(
                                ExprDesignator(
                                  DotDesignator(
                                    ThisDesignator(
                                    ) [ThisDesignator]
                                   x
                                  ) [DotDesignator]
                                  TermExpr(
                                    SingleFactorTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleFactorTerm]
                                  ) [TermExpr]
                                ) [ExprDesignator]
                              ) [Var]
                            ) [SingleFactorTerm]
                          ) [AddopExpr]
                          Plus(
                          ) [Plus]
                          SingleFactorTerm(
                            Var(
                              IdentDesignator(
                               a
                              ) [IdentDesignator]
                            ) [Var]
                          ) [SingleFactorTerm]
                        ) [AddopExpr]
                      ) [ReturnExprStatement]
                    ) [NoLabelStatement]
                  ) [StmtList]
                ) [MethodDecl]
              ) [MethodDeclarations]
              MethodDecl(
                VoidReturn(
                ) [VoidReturn]
               m
                NoFormParam(
                ) [NoFormParam]
                NoVarDecl(
                ) [NoVarDecl]
                NoStmt(
                ) [NoStmt]
              ) [MethodDecl]
            ) [MethodDeclarations]
          ) [ClassWithMethods]
        ) [ClassDecl]
      ) [ClassDec]
    ) [Decl]
    ClassDec(
      ClassDecl(
       C
        ExtendClass(
          Type(
           B
          ) [Type]
        ) [ExtendClass]
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            VarDeclara(
              Type(
               A
              ) [Type]
              NoVarCommaDecl(
              ) [NoVarCommaDecl]
              VarDeclaration(
               theA
              ) [VarDeclaration]
            ) [VarDeclara]
          ) [VarDeclarations]
          VarDeclara(
            Type(
             int
            ) [Type]
            NoVarCommaDecl(
            ) [NoVarCommaDecl]
            VarDeclaration(
             a
            ) [VarDeclaration]
          ) [VarDeclara]
        ) [VarDeclarations]
        ClassWithoutMethods(
        ) [ClassWithoutMethods]
      ) [ClassDecl]
    ) [ClassDec]
  ) [Decl]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      VoidReturn(
      ) [VoidReturn]
     main
      NoFormParam(
      ) [NoFormParam]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              VarDeclarations(
                NoVarDecl(
                ) [NoVarDecl]
                VarDeclara(
                  Type(
                   A
                  ) [Type]
                  NoVarCommaDecl(
                  ) [NoVarCommaDecl]
                  VarDeclaration(
                   a
                  ) [VarDeclaration]
                ) [VarDeclara]
              ) [VarDeclarations]
              VarDeclara(
                Type(
                 C
                ) [Type]
                NoVarCommaDecl(
                ) [NoVarCommaDecl]
                VarDeclaration(
                 c
                ) [VarDeclaration]
              ) [VarDeclara]
            ) [VarDeclarations]
            VarDeclara(
              Type(
               int
              ) [Type]
              NoVarCommaDecl(
              ) [NoVarCommaDecl]
              VarDeclaration(
               i
              ) [VarDeclaration]
            ) [VarDeclara]
          ) [VarDeclarations]
          VarDeclara(
            Type(
             int
            ) [Type]
            NoVarCommaDecl(
            ) [NoVarCommaDecl]
            VarArrayD(
             x
            ) [VarArrayD]
          ) [VarDeclara]
        ) [VarDeclarations]
        VarDeclara(
          Type(
           char
          ) [Type]
          NoVarCommaDecl(
          ) [NoVarCommaDecl]
          VarDeclaration(
           ch
          ) [VarDeclaration]
        ) [VarDeclara]
      ) [VarDeclarations]
      StmtList(
        StmtList(
          StmtList(
            StmtList(
              StmtList(
                StmtList(
                  StmtList(
                    StmtList(
                      StmtList(
                        StmtList(
                          StmtList(
                            StmtList(
                              NoStmt(
                              ) [NoStmt]
                              NoLabelStatement(
                                DesignStatement(
                                  AssignopDesignator(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                    Assignop(
                                    ) [Assignop]
                                    TermExpr(
                                      SingleFactorTerm(
                                        New(
                                          Type(
                                           A
                                          ) [Type]
                                        ) [New]
                                      ) [SingleFactorTerm]
                                    ) [TermExpr]
                                  ) [AssignopDesignator]
                                ) [DesignStatement]
                              ) [NoLabelStatement]
                            ) [StmtList]
                            NoLabelStatement(
                              DesignStatement(
                                AssignopDesignator(
                                  DotDesignator(
                                    IdentDesignator(
                                     a
                                    ) [IdentDesignator]
                                   x
                                  ) [DotDesignator]
                                  Assignop(
                                  ) [Assignop]
                                  TermExpr(
                                    SingleFactorTerm(
                                      NewExpression(
                                        Type(
                                         int
                                        ) [Type]
                                        TermExpr(
                                          SingleFactorTerm(
                                            NumberConst(
                                             5
                                            ) [NumberConst]
                                          ) [SingleFactorTerm]
                                        ) [TermExpr]
                                      ) [NewExpression]
                                    ) [SingleFactorTerm]
                                  ) [TermExpr]
                                ) [AssignopDesignator]
                              ) [DesignStatement]
                            ) [NoLabelStatement]
                          ) [StmtList]
                          NoLabelStatement(
                            DesignStatement(
                              AssignopDesignator(
                                DotDesignator(
                                  IdentDesignator(
                                   a
                                  ) [IdentDesignator]
                                 y
                                ) [DotDesignator]
                                Assignop(
                                ) [Assignop]
                                TermExpr(
                                  SingleFactorTerm(
                                    NewExpression(
                                      Type(
                                       int
                                      ) [Type]
                                      TermExpr(
                                        SingleFactorTerm(
                                          NumberConst(
                                           5
                                          ) [NumberConst]
                                        ) [SingleFactorTerm]
                                      ) [TermExpr]
                                    ) [NewExpression]
                                  ) [SingleFactorTerm]
                                ) [TermExpr]
                              ) [AssignopDesignator]
                            ) [DesignStatement]
                          ) [NoLabelStatement]
                        ) [StmtList]
                        NoLabelStatement(
                          DesignStatement(
                            AssignopDesignator(
                              IdentDesignator(
                               c
                              ) [IdentDesignator]
                              Assignop(
                              ) [Assignop]
                              TermExpr(
                                SingleFactorTerm(
                                  New(
                                    Type(
                                     C
                                    ) [Type]
                                  ) [New]
                                ) [SingleFactorTerm]
                              ) [TermExpr]
                            ) [AssignopDesignator]
                          ) [DesignStatement]
                        ) [NoLabelStatement]
                      ) [StmtList]
                      NoLabelStatement(
                        DesignStatement(
                          AssignopDesignator(
                            DotDesignator(
                              IdentDesignator(
                               c
                              ) [IdentDesignator]
                             theA
                            ) [DotDesignator]
                            Assignop(
                            ) [Assignop]
                            TermExpr(
                              SingleFactorTerm(
                                Var(
                                  IdentDesignator(
                                   a
                                  ) [IdentDesignator]
                                ) [Var]
                              ) [SingleFactorTerm]
                            ) [TermExpr]
                          ) [AssignopDesignator]
                        ) [DesignStatement]
                      ) [NoLabelStatement]
                    ) [StmtList]
                    NoLabelStatement(
                      DesignStatement(
                        AssignopDesignator(
                          DotDesignator(
                            IdentDesignator(
                             c
                            ) [IdentDesignator]
                           x
                          ) [DotDesignator]
                          Assignop(
                          ) [Assignop]
                          TermExpr(
                            SingleFactorTerm(
                              NewExpression(
                                Type(
                                 int
                                ) [Type]
                                TermExpr(
                                  SingleFactorTerm(
                                    NumberConst(
                                     5
                                    ) [NumberConst]
                                  ) [SingleFactorTerm]
                                ) [TermExpr]
                              ) [NewExpression]
                            ) [SingleFactorTerm]
                          ) [TermExpr]
                        ) [AssignopDesignator]
                      ) [DesignStatement]
                    ) [NoLabelStatement]
                  ) [StmtList]
                  NoLabelStatement(
                    DesignStatement(
                      AssignopDesignator(
                        IdentDesignator(
                         x
                        ) [IdentDesignator]
                        Assignop(
                        ) [Assignop]
                        TermExpr(
                          SingleFactorTerm(
                            NewExpression(
                              Type(
                               int
                              ) [Type]
                              TermExpr(
                                SingleFactorTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleFactorTerm]
                              ) [TermExpr]
                            ) [NewExpression]
                          ) [SingleFactorTerm]
                        ) [TermExpr]
                      ) [AssignopDesignator]
                    ) [DesignStatement]
                  ) [NoLabelStatement]
                ) [StmtList]
                NoLabelStatement(
                  ReadStatement(
                    DotDesignator(
                      IdentDesignator(
                       c
                      ) [IdentDesignator]
                     i
                    ) [DotDesignator]
                  ) [ReadStatement]
                ) [NoLabelStatement]
              ) [StmtList]
              NoLabelStatement(
                DesignStatement(
                  AssignopDesignator(
                    IdentDesignator(
                     i
                    ) [IdentDesignator]
                    Assignop(
                    ) [Assignop]
                    TermExpr(
                      SingleFactorTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleFactorTerm]
                    ) [TermExpr]
                  ) [AssignopDesignator]
                ) [DesignStatement]
              ) [NoLabelStatement]
            ) [StmtList]
            NoLabelStatement(
              DoStatement(
                Stmts(
                  Statements(
                    StmtList(
                      StmtList(
                        StmtList(
                          NoStmt(
                          ) [NoStmt]
                          NoLabelStatement(
                            ReadStatement(
                              ExprDesignator(
                                DotDesignator(
                                  IdentDesignator(
                                   c
                                  ) [IdentDesignator]
                                 x
                                ) [DotDesignator]
                                TermExpr(
                                  SingleFactorTerm(
                                    Var(
                                      IdentDesignator(
                                       i
                                      ) [IdentDesignator]
                                    ) [Var]
                                  ) [SingleFactorTerm]
                                ) [TermExpr]
                              ) [ExprDesignator]
                            ) [ReadStatement]
                          ) [NoLabelStatement]
                        ) [StmtList]
                        NoLabelStatement(
                          ReadStatement(
                            ExprDesignator(
                              DotDesignator(
                                DotDesignator(
                                  IdentDesignator(
                                   c
                                  ) [IdentDesignator]
                                 theA
                                ) [DotDesignator]
                               x
                              ) [DotDesignator]
                              TermExpr(
                                SingleFactorTerm(
                                  Var(
                                    IdentDesignator(
                                     i
                                    ) [IdentDesignator]
                                  ) [Var]
                                ) [SingleFactorTerm]
                              ) [TermExpr]
                            ) [ExprDesignator]
                          ) [ReadStatement]
                        ) [NoLabelStatement]
                      ) [StmtList]
                      NoLabelStatement(
                        DesignStatement(
                          IncrementDesignator(
                            IdentDesignator(
                             i
                            ) [IdentDesignator]
                          ) [IncrementDesignator]
                        ) [DesignStatement]
                      ) [NoLabelStatement]
                    ) [StmtList]
                  ) [Statements]
                ) [Stmts]
                SingleCondition(
                  SingleCondTerm(
                    TwoCondFacts(
                      TermExpr(
                        SingleFactorTerm(
                          Var(
                            IdentDesignator(
                             i
                            ) [IdentDesignator]
                          ) [Var]
                        ) [SingleFactorTerm]
                      ) [TermExpr]
                      Less(
                      ) [Less]
                      TermExpr(
                        SingleFactorTerm(
                          NumberConst(
                           5
                          ) [NumberConst]
                        ) [SingleFactorTerm]
                      ) [TermExpr]
                    ) [TwoCondFacts]
                  ) [SingleCondTerm]
                ) [SingleCondition]
              ) [DoStatement]
            ) [NoLabelStatement]
          ) [StmtList]
          NoLabelStatement(
            PrintStatement(
              TermExpr(
                SingleFactorTerm(
                  FuncCall(
                    DotDesignator(
                      IdentDesignator(
                       c
                      ) [IdentDesignator]
                     getValue
                    ) [DotDesignator]
                    Actuals(
                      ActualParam(
                        TermExpr(
                          SingleFactorTerm(
                            Var(
                              ExprDesignator(
                                DotDesignator(
                                  DotDesignator(
                                    IdentDesignator(
                                     c
                                    ) [IdentDesignator]
                                   theA
                                  ) [DotDesignator]
                                 x
                                ) [DotDesignator]
                                TermExpr(
                                  SingleFactorTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleFactorTerm]
                                ) [TermExpr]
                              ) [ExprDesignator]
                            ) [Var]
                          ) [SingleFactorTerm]
                        ) [TermExpr]
                      ) [ActualParam]
                    ) [Actuals]
                  ) [FuncCall]
                ) [SingleFactorTerm]
              ) [TermExpr]
            ) [PrintStatement]
          ) [NoLabelStatement]
        ) [StmtList]
        NoLabelStatement(
          DesignStatement(
            ActParsDesignator(
              DotDesignator(
                IdentDesignator(
                 c
                ) [IdentDesignator]
               m
              ) [DotDesignator]
              NoActuals(
              ) [NoActuals]
            ) [ActParsDesignator]
          ) [DesignStatement]
        ) [NoLabelStatement]
      ) [StmtList]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:31:35,090 - ===================================
