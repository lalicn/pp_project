INFO  00:37:05,523 - Compiling source file: C:\Users\Korisnik\Desktop\Programski prevodioci\Uradjeno\Leksicka analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  00:37:05,578 - #2 program
INFO  00:37:05,578 - #50 test301
INFO  00:37:05,578 - #6 const
INFO  00:37:05,579 - #50 int
INFO  00:37:05,579 - #50 nula
INFO  00:37:05,580 - #34 =
INFO  00:37:05,580 - #49 0
INFO  00:37:05,581 - #37 ;
INFO  00:37:05,581 - #6 const
INFO  00:37:05,582 - #50 int
INFO  00:37:05,582 - #50 jedan
INFO  00:37:05,582 - #34 =
INFO  00:37:05,582 - #49 1
INFO  00:37:05,582 - #37 ;
INFO  00:37:05,582 - #6 const
INFO  00:37:05,582 - #50 int
INFO  00:37:05,583 - #50 tri
INFO  00:37:05,583 - #34 =
INFO  00:37:05,583 - #49 3
INFO  00:37:05,583 - #37 ;
INFO  00:37:05,585 - #6 const
INFO  00:37:05,585 - #50 int
INFO  00:37:05,585 - #50 pet
INFO  00:37:05,585 - #34 =
INFO  00:37:05,585 - #49 5
INFO  00:37:05,585 - #37 ;
INFO  00:37:05,585 - #50 int
INFO  00:37:05,585 - #50 niz
INFO  00:37:05,586 - #43 [
INFO  00:37:05,587 - #44 ]
INFO  00:37:05,587 - #37 ;
INFO  00:37:05,587 - #50 char
INFO  00:37:05,587 - #50 nizch
INFO  00:37:05,587 - #43 [
INFO  00:37:05,587 - #44 ]
INFO  00:37:05,587 - #37 ;
INFO  00:37:05,587 - #45 {
INFO  00:37:05,588 - #13 void
INFO  00:37:05,588 - #50 main
INFO  00:37:05,589 - #41 (
INFO  00:37:05,590 - #42 )
INFO  00:37:05,590 - #50 int
INFO  00:37:05,591 - #50 bodovi
INFO  00:37:05,591 - #37 ;
INFO  00:37:05,591 - #50 bool
INFO  00:37:05,592 - #50 bt
INFO  00:37:05,592 - #37 ;
INFO  00:37:05,592 - #45 {
INFO  00:37:05,592 - #50 niz
INFO  00:37:05,592 - #34 =
INFO  00:37:05,593 - #9 new
INFO  00:37:05,593 - #50 int
INFO  00:37:05,593 - #43 [
INFO  00:37:05,593 - #49 3
INFO  00:37:05,593 - #44 ]
INFO  00:37:05,593 - #37 ;
INFO  00:37:05,593 - #50 niz
INFO  00:37:05,594 - #43 [
INFO  00:37:05,594 - #49 0
INFO  00:37:05,594 - #44 ]
INFO  00:37:05,594 - #34 =
INFO  00:37:05,594 - #49 0
INFO  00:37:05,594 - #37 ;
INFO  00:37:05,594 - #10 print
INFO  00:37:05,594 - #41 (
INFO  00:37:05,594 - #50 niz
INFO  00:37:05,594 - #43 [
INFO  00:37:05,595 - #49 0
INFO  00:37:05,599 - #44 ]
INFO  00:37:05,600 - #42 )
INFO  00:37:05,600 - #37 ;
INFO  00:37:05,600 - #50 niz
INFO  00:37:05,600 - #43 [
INFO  00:37:05,600 - #49 0
INFO  00:37:05,600 - #44 ]
INFO  00:37:05,601 - #35 ++
INFO  00:37:05,601 - #37 ;
INFO  00:37:05,601 - #10 print
INFO  00:37:05,601 - #41 (
INFO  00:37:05,601 - #50 niz
INFO  00:37:05,601 - #43 [
INFO  00:37:05,601 - #49 0
INFO  00:37:05,601 - #44 ]
INFO  00:37:05,601 - #42 )
INFO  00:37:05,601 - #37 ;
INFO  00:37:05,602 - #46 }
INFO  00:37:05,602 - #46 }
INFO  00:37:05,604 - Program(
  ProgName(
   test301
  ) [ProgName]
  Decl(
    Decl(
      Decl(
        Decl(
          Decl(
            Decl(
              DeclarationsDerived1(
              ) [DeclarationsDerived1]
              ConstDec(
                ConstDeclar(
                  ConstType(
                    Type(
                     int
                    ) [Type]
                  ) [ConstType]
                  SingleConstDecl(
                    ConstDNum(
                     nula
                      Assignop(
                      ) [Assignop]
                     0
                    ) [ConstDNum]
                  ) [SingleConstDecl]
                ) [ConstDeclar]
              ) [ConstDec]
            ) [Decl]
            ConstDec(
              ConstDeclar(
                ConstType(
                  Type(
                   int
                  ) [Type]
                ) [ConstType]
                SingleConstDecl(
                  ConstDNum(
                   jedan
                    Assignop(
                    ) [Assignop]
                   1
                  ) [ConstDNum]
                ) [SingleConstDecl]
              ) [ConstDeclar]
            ) [ConstDec]
          ) [Decl]
          ConstDec(
            ConstDeclar(
              ConstType(
                Type(
                 int
                ) [Type]
              ) [ConstType]
              SingleConstDecl(
                ConstDNum(
                 tri
                  Assignop(
                  ) [Assignop]
                 3
                ) [ConstDNum]
              ) [SingleConstDecl]
            ) [ConstDeclar]
          ) [ConstDec]
        ) [Decl]
        ConstDec(
          ConstDeclar(
            ConstType(
              Type(
               int
              ) [Type]
            ) [ConstType]
            SingleConstDecl(
              ConstDNum(
               pet
                Assignop(
                ) [Assignop]
               5
              ) [ConstDNum]
            ) [SingleConstDecl]
          ) [ConstDeclar]
        ) [ConstDec]
      ) [Decl]
      VarDec(
        VarDeclara(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          NoVarCommaDecl(
          ) [NoVarCommaDecl]
          VarArrayD(
           niz
          ) [VarArrayD]
        ) [VarDeclara]
      ) [VarDec]
    ) [Decl]
    VarDec(
      VarDeclara(
        VarType(
          Type(
           char
          ) [Type]
        ) [VarType]
        NoVarCommaDecl(
        ) [NoVarCommaDecl]
        VarArrayD(
         nizch
        ) [VarArrayD]
      ) [VarDeclara]
    ) [VarDec]
  ) [Decl]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidReturn(
        ) [VoidReturn]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          VarDeclara(
            VarType(
              Type(
               int
              ) [Type]
            ) [VarType]
            NoVarCommaDecl(
            ) [NoVarCommaDecl]
            VarDeclaration(
             bodovi
            ) [VarDeclaration]
          ) [VarDeclara]
        ) [VarDeclarations]
        VarDeclara(
          VarType(
            Type(
             bool
            ) [Type]
          ) [VarType]
          NoVarCommaDecl(
          ) [NoVarCommaDecl]
          VarDeclaration(
           bt
          ) [VarDeclaration]
        ) [VarDeclara]
      ) [VarDeclarations]
      StmtList(
        StmtList(
          StmtList(
            StmtList(
              StmtList(
                NoStmt(
                ) [NoStmt]
                NoLabelStatement(
                  DesignStatement(
                    AssignopDesignator(
                      IdentDesignator(
                       niz
                      ) [IdentDesignator]
                      Assignop(
                      ) [Assignop]
                      TermExpr(
                        SingleFactorTerm(
                          SingleBaseExpFactor(
                            NewArray(
                              Type(
                               int
                              ) [Type]
                              TermExpr(
                                SingleFactorTerm(
                                  SingleBaseExpFactor(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                  ) [SingleBaseExpFactor]
                                ) [SingleFactorTerm]
                              ) [TermExpr]
                            ) [NewArray]
                          ) [SingleBaseExpFactor]
                        ) [SingleFactorTerm]
                      ) [TermExpr]
                    ) [AssignopDesignator]
                  ) [DesignStatement]
                ) [NoLabelStatement]
              ) [StmtList]
              NoLabelStatement(
                DesignStatement(
                  AssignopDesignator(
                    ArrayDesignator(
                      IdentDesignator(
                       niz
                      ) [IdentDesignator]
                      TermExpr(
                        SingleFactorTerm(
                          SingleBaseExpFactor(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleBaseExpFactor]
                        ) [SingleFactorTerm]
                      ) [TermExpr]
                    ) [ArrayDesignator]
                    Assignop(
                    ) [Assignop]
                    TermExpr(
                      SingleFactorTerm(
                        SingleBaseExpFactor(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleBaseExpFactor]
                      ) [SingleFactorTerm]
                    ) [TermExpr]
                  ) [AssignopDesignator]
                ) [DesignStatement]
              ) [NoLabelStatement]
            ) [StmtList]
            NoLabelStatement(
              PrintStatement(
                TermExpr(
                  SingleFactorTerm(
                    SingleBaseExpFactor(
                      Var(
                        ArrayDesignator(
                          IdentDesignator(
                           niz
                          ) [IdentDesignator]
                          TermExpr(
                            SingleFactorTerm(
                              SingleBaseExpFactor(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleBaseExpFactor]
                            ) [SingleFactorTerm]
                          ) [TermExpr]
                        ) [ArrayDesignator]
                      ) [Var]
                    ) [SingleBaseExpFactor]
                  ) [SingleFactorTerm]
                ) [TermExpr]
              ) [PrintStatement]
            ) [NoLabelStatement]
          ) [StmtList]
          NoLabelStatement(
            DesignStatement(
              IncrementDesignator(
                ArrayDesignator(
                  IdentDesignator(
                   niz
                  ) [IdentDesignator]
                  TermExpr(
                    SingleFactorTerm(
                      SingleBaseExpFactor(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleBaseExpFactor]
                    ) [SingleFactorTerm]
                  ) [TermExpr]
                ) [ArrayDesignator]
              ) [IncrementDesignator]
            ) [DesignStatement]
          ) [NoLabelStatement]
        ) [StmtList]
        NoLabelStatement(
          PrintStatement(
            TermExpr(
              SingleFactorTerm(
                SingleBaseExpFactor(
                  Var(
                    ArrayDesignator(
                      IdentDesignator(
                       niz
                      ) [IdentDesignator]
                      TermExpr(
                        SingleFactorTerm(
                          SingleBaseExpFactor(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleBaseExpFactor]
                        ) [SingleFactorTerm]
                      ) [TermExpr]
                    ) [ArrayDesignator]
                  ) [Var]
                ) [SingleBaseExpFactor]
              ) [SingleFactorTerm]
            ) [TermExpr]
          ) [PrintStatement]
        ) [NoLabelStatement]
      ) [StmtList]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:37:05,605 - ===================================
INFO  00:37:05,623 - Deklarisana konstanta nula na liniji 5
INFO  00:37:05,623 - Deklarisana konstanta jedan na liniji 6
INFO  00:37:05,623 - Deklarisana konstanta tri na liniji 7
INFO  00:37:05,623 - Deklarisana konstanta pet na liniji 8
INFO  00:37:05,623 - Deklarisana promjenljiva niz na liniji 10
INFO  00:37:05,623 - Deklarisana promjenljiva nizch na liniji 11
INFO  00:37:05,623 - Obradjuje se funkcija main na liniji 14
INFO  00:37:05,624 - Deklarisana promjenljiva bodovi na liniji 15
INFO  00:37:05,624 - Deklarisana promjenljiva bt na liniji 16
INFO  00:37:05,624 - ===================================
INFO  00:37:05,630 - Parsiranje uspjesno zavrseno!
